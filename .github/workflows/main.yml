# This is a basic workflow to help you get started with Actions

name: Main CI for dcgp and dcgpy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The first thing we want to do is build on linux
  build-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Sets up conda
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      # Installs conda dependencies
      - name: Install conda dependencies
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          # Normally we’d use something like conda env create -f environment.yml to install an environment from a file. 
          # Unfortunately, environment variables don’t persist between steps in a workflow, which breaks some things in Conda. 
          # Installing the environment’s packages into the base environment avoids this issue because it makes the packages available by default.
          $CONDA/bin/conda env update --file environment.yml --name base

      # Runs a set of commands using the runners shell
      - name: Builds dcgp
        run: |
          echo Building dcgp
          mkdir build
          chdir build
          cmake -DCMAKE_INSTALL_PREFIX=$CONDA ../ 
